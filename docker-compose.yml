services:
  nginx:
    build: ./
#    image: nginx:1.27.2
    volumes:
#      - static-backend:/var/www/static
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
    depends_on:
      - auth
      - content
      - auth_pumpkin
    ports:
      - "80:80"
  auth:
    build: ./src
    env_file:
      - ./src/.env
    volumes:
      - ./src/:/app/
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  auth_pumpkin:
    build: ./pumpkin
    env_file:
      - ./pumpkin/.env
    volumes:
      - ./pumpkin/:/app/
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  postgres:
    image: postgres:17.3
    env_file: ./src/.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.4.1-bookworm
    volumes:
      - redis_data:/redis_data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    ports:
      - "6379:6379"
  tests:
    build: ./src
    env_file:
      - ./src/.env
    entrypoint: >
      sh -c "pytest -x"
#    depends_on:
#      - jaeger-all-in-one
  all-in-one:
      environment:
          - COLLECTOR_ZIPKIN_HOST_PORT=:9411
          - COLLECTOR_OTLP_ENABLED=true
      ports:
          - 6831:6831/udp
          - 6832:6832/udp
          - 5778:5778
          - 16686:16686
          - 4317:4317
          - 4318:4318
          - 4319:4319
          - 14250:14250
          - 14268:14268
          - 14269:14269
          - 9411:9411
      image: jaegertracing/all-in-one:1.44.0
#  jaeger-all-in-one:
#    image: jaegertracing/all-in-one:1.67.0
#    ports:
#      - "16686:16686"
##      - "14268:14628"
##      - "14250:14250"
#      - "6831:6831"
#    depends_on:
#      - auth
  content:
    build: ./content
    env_file:
      - ./content/.env
    volumes:
      - ./content/:/app/
    ports:
      - "8002:8002"
    healthcheck:
      test:
         [
           "CMD-SHELL",
           "curl GET http://content:8002/api/content/healthcheck",
         ]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      elastic:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  elastic:
    image: elasticsearch:8.15.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms300m -Xmx300m"
    healthcheck:
      test:
         [
           "CMD-SHELL",
           "curl -s http://localhost:9200",
         ]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      - redis
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
  django:
    build: ./movies_admin
    ports:
      - "8003:8003"
    volumes:
      - ./movies_admin/:/app/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 5s
      retries: 1000
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - "rabbitmq_data:/bitnami"
volumes:
  pg_data:
  redis_data:
  rabbitmq_data:
  es_data:
