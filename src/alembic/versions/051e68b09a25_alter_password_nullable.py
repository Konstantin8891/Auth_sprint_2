"""Alter password nullable

Revision ID: 051e68b09a25
Revises: ba04fb199eda
Create Date: 2025-03-16 17:37:35.324982

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "051e68b09a25"
down_revision: Union[str, None] = "ba04fb199eda"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("userrole_user_id_fkey", "userrole", type_="foreignkey")
    op.drop_constraint("userrole_role_id_fkey", "userrole", type_="foreignkey")
    op.create_foreign_key(None, "userrole", "users", ["user_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "userrole", "roles", ["role_id"], ["id"], ondelete="CASCADE")
    op.alter_column("users", "password", existing_type=sa.VARCHAR(length=255), nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("users", "password", existing_type=sa.VARCHAR(length=255), nullable=False)
    op.drop_constraint(None, "userrole", type_="foreignkey")
    op.drop_constraint(None, "userrole", type_="foreignkey")
    op.create_foreign_key("userrole_role_id_fkey", "userrole", "roles", ["role_id"], ["id"])
    op.create_foreign_key("userrole_user_id_fkey", "userrole", "users", ["user_id"], ["id"])
    # ### end Alembic commands ###
