"""Add login history

Revision ID: 369a4e567e9d
Revises: 74df5ee08bf2
Create Date: 2025-02-25 17:31:30.825161

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "369a4e567e9d"
down_revision: Union[str, None] = "74df5ee08bf2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "login_history",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("user_agent", sa.String(length=250), nullable=True),
        sa.Column("host", sa.String(length=250), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_unique_constraint("permissions_id_uq", "permissions", ["id"])
    op.create_unique_constraint("roles_id_uq", "roles", ["id"])
    op.create_unique_constraint("sections_id_uq", "sections", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("sections_id_uq", "sections", type_="unique")
    op.drop_constraint("roles_id_uq", "roles", type_="unique")
    op.drop_constraint("permissions_id_uq", "permissions", type_="unique")
    op.drop_table("login_history")
    # ### end Alembic commands ###
